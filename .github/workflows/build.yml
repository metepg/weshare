name: Build & Push to Github Container Registry

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: "Run tests before build?"
        type: boolean
        default: true
  pull_request:
    branches: [ dev, main ]
    types:
      - closed
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  packages: write

jobs:
  tests:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.run_tests }}
    uses: ./.github/workflows/tests.yml
    secrets: inherit

  build:
    needs: [ tests ]
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # push test for dev merges
            type=raw,value=test,enable=${{ github.event.pull_request.base.ref == 'dev' }}

            # push test for manual runs
            type=raw,value=test,enable=${{ github.event_name == 'workflow_dispatch' }}

            # push latest for main merges
            type=raw,value=latest,enable=${{ github.event.pull_request.base.ref == 'main' }}

            # push latest for direct pushes to main
            type=raw,value=latest,enable=${{ github.ref_name == 'main' && github.event_name == 'push' }}

            # semver tags for git tag pushes
            type=semver,pattern={{version}},prefix=
            type=semver,pattern={{major}}.{{minor}},prefix=
            type=semver,pattern={{major}},prefix=

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
